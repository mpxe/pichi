# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
header_name {.h} 
code_name {.cpp}
decl {\#include "../pichi.h"} {private global
} 

decl {class Pichi;} {public global
} 

class MainWindow {open
} {
  Function {MainWindow(Pichi* p)} {open
  } {
    code {pichi_ = p;} {}
    code {last_count_ = 0;} {}
    Fl_Window main_window {
      label Pichi open
      private xywh {59 530 500 300} type Double visible
    } {
      Fl_Group {} {open
        xywh {0 0 500 38}
      } {
        Fl_Light_Button button_start {
          label Start
          callback {button_start_clicked()}
          private xywh {122 6 60 26} selection_color 62
        }
        Fl_Choice choice_mode {open
          private xywh {6 6 110 26} down_box BORDER_BOX labeltype NO_LABEL
        } {
          MenuItem {} {
            label Transmit
            xywh {0 0 34 20}
          }
          MenuItem {} {
            label Receive
            xywh {0 0 34 20}
          }
          MenuItem {} {
            label Log
            xywh {0 0 34 20}
          }
          MenuItem {} {
            label Display
            xywh {0 0 34 20}
          }
          MenuItem {} {
            label Debug
            xywh {0 0 34 20}
          }
        }
        Fl_Output text_rate {
          label {Rate (Hz)}
          xywh {254 6 60 26} box FLAT_BOX textfont 13
        }
        Fl_Output text_total {
          label Total
          xywh {358 6 136 24} box FLAT_BOX textfont 13
        }
      }
      Fl_Tabs {} {open
        xywh {6 38 488 224}
      } {
        Fl_Group {} {
          label Device
          xywh {6 60 488 202} hide
        } {
          Fl_Input text_device_id {
            label {Device ID}
            private xywh {12 66 160 24} align 8
          }
        }
        Fl_Group {} {
          label Time
          xywh {6 60 488 202} hide
        } {
          Fl_Button button_sync_time {
            label {Sync Time}
            callback {button_sync_time_clicked()}
            private xywh {12 66 90 26}
          }
          Fl_Box {} {
            label {Synchronize time via NTP}
            xywh {106 66 382 26} align 20
          }
        }
        Fl_Group {} {
          label GNSS
          xywh {6 60 488 202}
        } {
          Fl_Input text_gnss_port {
            label {Port (Device sending NMEA sentences)}
            private xywh {12 66 160 24} align 8
          }
          Fl_Input text_gnss_port_rate {
            label {Baud Rate}
            private xywh {12 96 160 24} align 8
          }
          Fl_Box {} {
            label {NMEA sentence filter}
            xywh {12 142 474 98} box DOWN_BOX align 5
          }
          Fl_Check_Button check_rmc {
            label {RMC (Recommended minimum data)}
            xywh {18 150 460 16} down_box DOWN_BOX value 1
          }
          Fl_Check_Button check_gga {
            label {GGA (Global positioning system fix data)}
            xywh {18 172 460 16} down_box DOWN_BOX
          }
          Fl_Check_Button check_gsv {
            label {GSV (Satellites in view)}
            xywh {18 194 460 16} down_box DOWN_BOX
          }
          Fl_Check_Button check_other {
            label {Other (When logging sentences)}
            xywh {18 216 460 16} down_box DOWN_BOX
          }
        }
        Fl_Group {} {
          label Transmit
          xywh {6 60 488 202} hide
        } {
          Fl_Input text_trans_ip {
            label {IP (Target device)}
            private xywh {12 66 160 24} align 8
          }
          Fl_Input text_trans_port {
            label Port
            private xywh {12 96 160 24} align 8
          }
        }
        Fl_Group {} {
          label Receive
          xywh {6 60 488 202} hide
        } {
          Fl_Input text_recv_ip {
            label {IP (This device)}
            private xywh {12 66 160 24} align 8
          }
          Fl_Input text_recv_port {
            label Port
            private xywh {12 96 160 24} align 8
          }
        }
        Fl_Group {} {
          label Log
          xywh {6 60 488 202} hide
        } {
          Fl_Round_Button radio_log_all {
            label {All (Header, timings and data)}
            callback {radio_log_clicked()}
            private xywh {12 66 474 16} down_box ROUND_DOWN_BOX
          }
          Fl_Round_Button radio_log_short {
            label {Short (Device ID and data)}
            callback {radio_log_clicked()}
            private xywh {12 85 474 16} down_box ROUND_DOWN_BOX value 1
          }
        }
        Fl_Group {} {
          label Display open
          xywh {6 60 488 202} hide
        } {
          Fl_Output text_display_utc {
            label {UTC Timestamp}
            xywh {12 66 200 24} box FLAT_BOX align 8
          }
          Fl_Output text_display_lat {
            label Latitude
            xywh {12 96 200 24} box FLAT_BOX align 8
          }
          Fl_Output text_display_long {
            label Longitude
            xywh {12 126 200 24} box FLAT_BOX align 8
          }
        }
      }
      Fl_Group {} {open selected
        xywh {6 262 488 38}
      } {
        Fl_Button button_apply {
          label Apply
          callback {button_apply_clicked()}
          xywh {6 268 70 26}
        }
      }
    }
    code {load_settings();} {}
  }
  Function {show(int argc, char** argv)} {open return_type void
  } {
    code {main_window->show(argc, argv);} {}
  }
  Function {update_status_callback(void* p)} {open return_type {static void}
  } {}
  Function {update_display_callback(void* p)} {open return_type {static void}
  } {}
  Function {update_status()} {open return_type void
  } {}
  Function {update_display()} {open return_type void
  } {}
  Function {apply_settings()} {private return_type void
  } {}
  Function {load_settings()} {private return_type void
  } {}
  Function {button_start_clicked()} {private return_type void
  } {}
  Function {button_apply_clicked()} {private return_type void
  } {}
  Function {button_sync_time_clicked()} {open private return_type void
  } {}
  Function {radio_log_clicked()} {open private return_type void
  } {}
  decl {Pichi* pichi_;} {private local
  }
  decl {unsigned long long last_count_;} {private local
  }
} 
