// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef mainwindow_h
#define mainwindow_h
#include <FL/Fl.H>
class Pichi;
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Round_Button.H>

class MainWindow {
public:
  MainWindow(Pichi* p);
private:
  Fl_Double_Window *main_window;
  Fl_Light_Button *button_start;
  inline void cb_button_start_i(Fl_Light_Button*, void*);
  static void cb_button_start(Fl_Light_Button*, void*);
  Fl_Choice *choice_mode;
  static Fl_Menu_Item menu_choice_mode[];
public:
  Fl_Output *text_rate;
  Fl_Output *text_total;
private:
  Fl_Input *text_device_id;
  Fl_Button *button_sync_time;
  inline void cb_button_sync_time_i(Fl_Button*, void*);
  static void cb_button_sync_time(Fl_Button*, void*);
  Fl_Input *text_gnss_port;
  Fl_Input *text_gnss_port_rate;
public:
  Fl_Check_Button *check_rmc;
  Fl_Check_Button *check_gga;
  Fl_Check_Button *check_gsv;
  Fl_Check_Button *check_other;
private:
  Fl_Input *text_trans_ip;
  Fl_Input *text_trans_port;
  Fl_Input *text_recv_ip;
  Fl_Input *text_recv_port;
  Fl_Round_Button *radio_log_all;
  inline void cb_radio_log_all_i(Fl_Round_Button*, void*);
  static void cb_radio_log_all(Fl_Round_Button*, void*);
  Fl_Round_Button *radio_log_short;
  inline void cb_radio_log_short_i(Fl_Round_Button*, void*);
  static void cb_radio_log_short(Fl_Round_Button*, void*);
public:
  Fl_Output *text_display_utc;
  Fl_Output *text_display_lat;
  Fl_Output *text_display_long;
  Fl_Button *button_apply;
private:
  inline void cb_button_apply_i(Fl_Button*, void*);
  static void cb_button_apply(Fl_Button*, void*);
public:
  void show(int argc, char** argv);
  static void update_status_callback(void* p);
  static void update_display_callback(void* p);
  void update_status();
  void update_display();
private:
  void apply_settings();
  void load_settings();
  void button_start_clicked();
  void button_apply_clicked();
  void button_sync_time_clicked();
  void radio_log_clicked();
  Pichi* pichi_; 
  unsigned long long last_count_; 
};
#endif
